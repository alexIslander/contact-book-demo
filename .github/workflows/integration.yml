name: CIDI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev, feature/* ]
  pull_request:
    branches: [ main, dev, feature/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build
        run: |
          npm run build -- --prod

      - name: Test
        run: |
          npm run test -- --prod

  firebase-deploy:
    # Deploys when build is successful
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: '12.x'

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
